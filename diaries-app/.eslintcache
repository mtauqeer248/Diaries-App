[{"I:\\Diaries App\\diaries-app\\src\\index.tsx":"1","I:\\Diaries App\\diaries-app\\src\\reportWebVitals.ts":"2","I:\\Diaries App\\diaries-app\\src\\services\\mirage\\routes\\user.ts":"3","I:\\Diaries App\\diaries-app\\src\\app\\App.tsx":"4","I:\\Diaries App\\diaries-app\\src\\util.ts":"5","I:\\Diaries App\\diaries-app\\src\\services\\mirage\\server.ts":"6","I:\\Diaries App\\diaries-app\\src\\services\\mirage\\routes\\diary.ts":"7","I:\\Diaries App\\diaries-app\\src\\store.ts":"8","I:\\Diaries App\\diaries-app\\src\\rootReducer.ts":"9","I:\\Diaries App\\diaries-app\\src\\features\\auth\\userSlice.ts":"10","I:\\Diaries App\\diaries-app\\src\\features\\auth\\authSlice.ts":"11","I:\\Diaries App\\diaries-app\\src\\features\\diary\\diariesSlice.ts":"12","I:\\Diaries App\\diaries-app\\src\\features\\entry\\editorSlice.ts":"13","I:\\Diaries App\\diaries-app\\src\\features\\entry\\entriesSlice.ts":"14","I:\\Diaries App\\diaries-app\\src\\features\\home\\Home.tsx":"15","I:\\Diaries App\\diaries-app\\src\\features\\diary\\Diaries.tsx":"16","I:\\Diaries App\\diaries-app\\src\\features\\entry\\Editor.tsx":"17","I:\\Diaries App\\diaries-app\\src\\services\\api.ts":"18","I:\\Diaries App\\diaries-app\\src\\features\\diary\\DiaryEntriesList.tsx":"19","I:\\Diaries App\\diaries-app\\src\\features\\diary\\DiaryTile.tsx":"20","I:\\Diaries App\\diaries-app\\src\\features\\auth\\Auth.tsx":"21"},{"size":464,"mtime":1606288233530,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":1275,"mtime":1606286860921,"results":"25","hashOfConfig":"23"},{"size":706,"mtime":1606288343678,"results":"26","hashOfConfig":"23"},{"size":569,"mtime":1606287680330,"results":"27","hashOfConfig":"23"},{"size":1478,"mtime":1606287495407,"results":"28","hashOfConfig":"23"},{"size":3316,"mtime":1606286968372,"results":"29","hashOfConfig":"23"},{"size":335,"mtime":1606288187394,"results":"30","hashOfConfig":"23"},{"size":602,"mtime":1606221509550,"results":"31","hashOfConfig":"23"},{"size":435,"mtime":1606287985224,"results":"32","hashOfConfig":"23"},{"size":678,"mtime":1606289553417,"results":"33","hashOfConfig":"23"},{"size":832,"mtime":1606288026841,"results":"34","hashOfConfig":"23"},{"size":944,"mtime":1606288106580,"results":"35","hashOfConfig":"23"},{"size":699,"mtime":1606288065721,"results":"36","hashOfConfig":"23"},{"size":367,"mtime":1606288808758,"results":"37","hashOfConfig":"23"},{"size":2964,"mtime":1606290867438,"results":"38","hashOfConfig":"23"},{"size":3906,"mtime":1606288594924,"results":"39","hashOfConfig":"23"},{"size":962,"mtime":1606291709373,"results":"40","hashOfConfig":"23"},{"size":1678,"mtime":1606291396418,"results":"41","hashOfConfig":"23"},{"size":2476,"mtime":1606288647123,"results":"42","hashOfConfig":"23"},{"size":3076,"mtime":1606290562314,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1fpqllc",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},"I:\\Diaries App\\diaries-app\\src\\index.tsx",[],["90","91"],"I:\\Diaries App\\diaries-app\\src\\reportWebVitals.ts",[],"I:\\Diaries App\\diaries-app\\src\\services\\mirage\\routes\\user.ts",["92"],"import { Response, Request } from 'miragejs';\r\nimport { handleErrors } from '../server';\r\nimport { User } from '../../../interfaces/user.interface';\r\nimport { randomBytes } from 'crypto';\r\n\r\nconst generateToken = () => randomBytes(8).toString('hex');\r\n\r\nexport interface AuthResponse {\r\n  token: string;\r\n  user: User;\r\n}\r\n\r\nconst login = (schema: any, req: Request): AuthResponse | Response => {\r\n  const { username, password } = JSON.parse(req.requestBody);\r\n  const user = schema.users.findBy({ username });\r\n  if (!user) {\r\n    return handleErrors(null, 'No user with that username exists');\r\n  }\r\n  if (password !== user.password) {\r\n    return handleErrors(null, 'Password is incorrect');\r\n  }\r\n  const token = generateToken();\r\n  return {\r\n    user: user.attrs as User,\r\n    token,\r\n  };\r\n};\r\n\r\nconst signup = (schema: any, req: Request): AuthResponse | Response => {\r\n  const data = JSON.parse(req.requestBody);\r\n  const exUser = schema.users.findBy({ username: data.username });\r\n  if (exUser) {\r\n    return handleErrors(null, 'A user with that username already exists.');\r\n  }\r\n  const user = schema.users.create(data);\r\n  const token = generateToken();\r\n  return {\r\n    user: user.attrs as User,\r\n    token,\r\n  };\r\n};\r\n\r\nexport default {\r\n  login,\r\n  signup,\r\n};\r\n","I:\\Diaries App\\diaries-app\\src\\app\\App.tsx",[],"I:\\Diaries App\\diaries-app\\src\\util.ts",[],"I:\\Diaries App\\diaries-app\\src\\services\\mirage\\server.ts",[],"I:\\Diaries App\\diaries-app\\src\\services\\mirage\\routes\\diary.ts",[],"I:\\Diaries App\\diaries-app\\src\\store.ts",[],"I:\\Diaries App\\diaries-app\\src\\rootReducer.ts",[],"I:\\Diaries App\\diaries-app\\src\\features\\auth\\userSlice.ts",[],"I:\\Diaries App\\diaries-app\\src\\features\\auth\\authSlice.ts",["93"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface AuthState {\r\n  token: string | null;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  token: null,\r\n  isAuthenticated: false,\r\n};\r\n\r\nconst auth = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    saveToken(state, { payload }) {\r\n      if (payload) {\r\n        state.token = payload;\r\n      }\r\n    },\r\n    clearToken(state) {\r\n      state.token = null;\r\n    },\r\n    setAuthState(state, { payload }) {\r\n      state.isAuthenticated = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { saveToken, clearToken, setAuthState } = auth.actions;\r\nexport default auth.reducer;\r\n","I:\\Diaries App\\diaries-app\\src\\features\\diary\\diariesSlice.ts",[],"I:\\Diaries App\\diaries-app\\src\\features\\entry\\editorSlice.ts",[],"I:\\Diaries App\\diaries-app\\src\\features\\entry\\entriesSlice.ts",[],"I:\\Diaries App\\diaries-app\\src\\features\\home\\Home.tsx",[],"I:\\Diaries App\\diaries-app\\src\\features\\diary\\Diaries.tsx",[],"I:\\Diaries App\\diaries-app\\src\\features\\entry\\Editor.tsx",[],"I:\\Diaries App\\diaries-app\\src\\services\\api.ts",[],"I:\\Diaries App\\diaries-app\\src\\features\\diary\\DiaryEntriesList.tsx",[],"I:\\Diaries App\\diaries-app\\src\\features\\diary\\DiaryTile.tsx",[],"I:\\Diaries App\\diaries-app\\src\\features\\auth\\Auth.tsx",["94"],"import React, { FC, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport * as Yup from \"yup\";\r\nimport http from \"../../services/api\";\r\nimport { saveToken, setAuthState } from \"./authSlice\";\r\nimport { setUser } from \"./userSlice\";\r\nimport { AuthResponse } from \"../../services/mirage/routes/user\";\r\nimport { useAppDispatch } from \"../../store\";\r\n// import { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nconst schema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .required(\"What? No username?\")\r\n    .max(16, \"Username cannot be longer than 16 characters\"),\r\n  password: Yup.string().required('Without a password, \"None shall pass!\"'),\r\n  email: Yup.string().email(\"Please provide a valid email address (abc@xy.z)\"),\r\n});\r\n\r\nconst Auth: FC = () => {\r\n  const { handleSubmit, register, errors } = useForm<User>();\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const submitForm = (data: User) => {\r\n    const path = isLogin ? \"/auth/login\" : \"/auth/signup\";\r\n    http\r\n      .post<User, AuthResponse>(path, data)\r\n      .then((res) => {\r\n        if (res) {\r\n          const { user, token } = res;\r\n          dispatch(saveToken(token));\r\n          dispatch(setUser(user));\r\n          dispatch(setAuthState(true));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <h1 className=\"header-auth\"> Diaries App</h1>\r\n      <form onSubmit={handleSubmit(submitForm)}>\r\n        <div className=\"inputWrapper\">\r\n          <input ref={register} name=\"username\" placeholder=\"Username\" />\r\n          {errors && errors.username && (\r\n            <p className=\"error\">{errors.username.message}</p>\r\n          )}\r\n        </div>\r\n        <div className=\"inputWrapper\">\r\n          <input\r\n            ref={register}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n          {errors && errors.password && (\r\n            <p className=\"error\">{errors.password.message}</p>\r\n          )}\r\n        </div>\r\n        {!isLogin && (\r\n          <div className=\"inputWrapper\">\r\n            <input ref={register} name=\"email\" placeholder=\"Email (optional)\" />\r\n            {errors && errors.email && (\r\n              <p className=\"error\">{errors.email.message}</p>\r\n            )}\r\n          </div>\r\n        )}\r\n        <div className=\"inputWrapper\">\r\n          <button type=\"submit\" disabled={loading}>\r\n            {isLogin ? \"Login\" : \"Create account\"}\r\n          </button>\r\n        </div>\r\n        <p\r\n          onClick={() => setIsLogin(!isLogin)}\r\n          style={{ cursor: \"pointer\", opacity: 0.7 }}\r\n          className=\"no-account\"\r\n        >\r\n          {isLogin ? \"No account? Create one\" : \"Already have an account?\"}\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":43,"column":1,"nodeType":"101","endLine":46,"endColumn":3},{"ruleId":"102","severity":1,"message":"103","line":1,"column":23,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"106","line":12,"column":7,"nodeType":"104","messageId":"105","endLine":12,"endColumn":13},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'PayloadAction' is defined but never used.","Identifier","unusedVar","'schema' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]